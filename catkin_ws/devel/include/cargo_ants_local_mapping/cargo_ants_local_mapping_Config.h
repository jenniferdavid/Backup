//#line 2 "/opt/ros/indigo/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
// 
// File autogenerated for the cargo_ants_local_mapping package 
// by the dynamic_reconfigure package.
// Please do not edit.
// 
// ********************************************************/

#ifndef __cargo_ants_local_mapping__CARGO_ANTS_LOCAL_MAPPING_CONFIG_H__
#define __cargo_ants_local_mapping__CARGO_ANTS_LOCAL_MAPPING_CONFIG_H__

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace cargo_ants_local_mapping
{
  class cargo_ants_local_mapping_ConfigStatics;
  
  class cargo_ants_local_mapping_Config
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l, 
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }
      
      virtual void clamp(cargo_ants_local_mapping_Config &config, const cargo_ants_local_mapping_Config &max, const cargo_ants_local_mapping_Config &min) const = 0;
      virtual void calcLevel(uint32_t &level, const cargo_ants_local_mapping_Config &config1, const cargo_ants_local_mapping_Config &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, cargo_ants_local_mapping_Config &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const cargo_ants_local_mapping_Config &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, cargo_ants_local_mapping_Config &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const cargo_ants_local_mapping_Config &config) const = 0;
      virtual void getValue(const cargo_ants_local_mapping_Config &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;
    
    template <class T>
    class ParamDescription : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string name, std::string type, uint32_t level, 
          std::string description, std::string edit_method, T cargo_ants_local_mapping_Config::* f) :
        AbstractParamDescription(name, type, level, description, edit_method),
        field(f)
      {}

      T (cargo_ants_local_mapping_Config::* field);

      virtual void clamp(cargo_ants_local_mapping_Config &config, const cargo_ants_local_mapping_Config &max, const cargo_ants_local_mapping_Config &min) const
      {
        if (config.*field > max.*field)
          config.*field = max.*field;
        
        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const cargo_ants_local_mapping_Config &config1, const cargo_ants_local_mapping_Config &config2) const
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, cargo_ants_local_mapping_Config &config) const
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const cargo_ants_local_mapping_Config &config) const
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, cargo_ants_local_mapping_Config &config) const
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const cargo_ants_local_mapping_Config &config) const
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const cargo_ants_local_mapping_Config &config, boost::any &val) const
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, cargo_ants_local_mapping_Config &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    template<class T, class PT>
    class GroupDescription : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string name, std::string type, int parent, int id, bool s, T PT::* f) : AbstractGroupDescription(name, type, parent, id, s), field(f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, cargo_ants_local_mapping_Config &top) const
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T (PT::* field);
      std::vector<cargo_ants_local_mapping_Config::AbstractGroupDescriptionConstPtr> groups;
    };
    
class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(cargo_ants_local_mapping_Config &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("verbose_mode"==(*_i)->name){verbose_mode = boost::any_cast<bool>(val);}
        if("build_grid"==(*_i)->name){build_grid = boost::any_cast<bool>(val);}
        if("detect_grid_obstacles"==(*_i)->name){detect_grid_obstacles = boost::any_cast<bool>(val);}
        if("detect_scan_obstacles"==(*_i)->name){detect_scan_obstacles = boost::any_cast<bool>(val);}
        if("detect_lines"==(*_i)->name){detect_lines = boost::any_cast<bool>(val);}
        if("detect_corners"==(*_i)->name){detect_corners = boost::any_cast<bool>(val);}
        if("detect_polylines"==(*_i)->name){detect_polylines = boost::any_cast<bool>(val);}
        if("mapping_rate"==(*_i)->name){mapping_rate = boost::any_cast<double>(val);}
        if("is_odom_relative"==(*_i)->name){is_odom_relative = boost::any_cast<bool>(val);}
        if("num_lasers"==(*_i)->name){num_lasers = boost::any_cast<int>(val);}
        if("num_radars"==(*_i)->name){num_radars = boost::any_cast<int>(val);}
        if("base_link_name"==(*_i)->name){base_link_name = boost::any_cast<std::string>(val);}
        if("radar_idx_offset"==(*_i)->name){radar_idx_offset = boost::any_cast<int>(val);}
        if("radar_link_name"==(*_i)->name){radar_link_name = boost::any_cast<std::string>(val);}
        if("grid_size_x"==(*_i)->name){grid_size_x = boost::any_cast<double>(val);}
        if("grid_size_y"==(*_i)->name){grid_size_y = boost::any_cast<double>(val);}
        if("grid_cell_size"==(*_i)->name){grid_cell_size = boost::any_cast<double>(val);}
        if("grid_x_max"==(*_i)->name){grid_x_max = boost::any_cast<double>(val);}
        if("grid_y_max"==(*_i)->name){grid_y_max = boost::any_cast<double>(val);}
        if("cell_occupancy_odom_th"==(*_i)->name){cell_occupancy_odom_th = boost::any_cast<double>(val);}
        if("cell_occupancy_cluster_th"==(*_i)->name){cell_occupancy_cluster_th = boost::any_cast<double>(val);}
        if("cell_occupancy_decay"==(*_i)->name){cell_occupancy_decay = boost::any_cast<double>(val);}
        if("cell_lidar_hit"==(*_i)->name){cell_lidar_hit = boost::any_cast<double>(val);}
      }
    }

    bool verbose_mode;
bool build_grid;
bool detect_grid_obstacles;
bool detect_scan_obstacles;
bool detect_lines;
bool detect_corners;
bool detect_polylines;
double mapping_rate;
bool is_odom_relative;
int num_lasers;
int num_radars;
std::string base_link_name;
int radar_idx_offset;
std::string radar_link_name;
double grid_size_x;
double grid_size_y;
double grid_cell_size;
double grid_x_max;
double grid_y_max;
double cell_occupancy_odom_th;
double cell_occupancy_cluster_th;
double cell_occupancy_decay;
double cell_lidar_hit;

    bool state;
    std::string name;

    
}groups;



//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool verbose_mode;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool build_grid;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool detect_grid_obstacles;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool detect_scan_obstacles;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool detect_lines;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool detect_corners;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool detect_polylines;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double mapping_rate;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool is_odom_relative;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int num_lasers;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int num_radars;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string base_link_name;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int radar_idx_offset;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string radar_link_name;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double grid_size_x;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double grid_size_y;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double grid_cell_size;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double grid_x_max;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double grid_y_max;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double cell_occupancy_odom_th;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double cell_occupancy_cluster_th;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double cell_occupancy_decay;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double cell_lidar_hit;
//#line 218 "/opt/ros/indigo/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("cargo_ants_local_mapping_Config::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }
    
    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }
    
    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const cargo_ants_local_mapping_Config &__max__ = __getMax__();
      const cargo_ants_local_mapping_Config &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const cargo_ants_local_mapping_Config &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }
    
    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const cargo_ants_local_mapping_Config &__getDefault__();
    static const cargo_ants_local_mapping_Config &__getMax__();
    static const cargo_ants_local_mapping_Config &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();
    
  private:
    static const cargo_ants_local_mapping_ConfigStatics *__get_statics__();
  };
  
  template <> // Max and min are ignored for strings.
  inline void cargo_ants_local_mapping_Config::ParamDescription<std::string>::clamp(cargo_ants_local_mapping_Config &config, const cargo_ants_local_mapping_Config &max, const cargo_ants_local_mapping_Config &min) const
  {
    return;
  }

  class cargo_ants_local_mapping_ConfigStatics
  {
    friend class cargo_ants_local_mapping_Config;
    
    cargo_ants_local_mapping_ConfigStatics()
    {
cargo_ants_local_mapping_Config::GroupDescription<cargo_ants_local_mapping_Config::DEFAULT, cargo_ants_local_mapping_Config> Default("Default", "", 0, 0, true, &cargo_ants_local_mapping_Config::groups);
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.verbose_mode = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.verbose_mode = 1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.verbose_mode = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<bool>("verbose_mode", "bool", -1, "verbose mode [t/f]", "", &cargo_ants_local_mapping_Config::verbose_mode)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<bool>("verbose_mode", "bool", -1, "verbose mode [t/f]", "", &cargo_ants_local_mapping_Config::verbose_mode)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.build_grid = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.build_grid = 1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.build_grid = 1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<bool>("build_grid", "bool", -1, "build grid [t/f]", "", &cargo_ants_local_mapping_Config::build_grid)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<bool>("build_grid", "bool", -1, "build grid [t/f]", "", &cargo_ants_local_mapping_Config::build_grid)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.detect_grid_obstacles = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.detect_grid_obstacles = 1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.detect_grid_obstacles = 1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<bool>("detect_grid_obstacles", "bool", -1, "detect obstacles at grid[t/f]", "", &cargo_ants_local_mapping_Config::detect_grid_obstacles)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<bool>("detect_grid_obstacles", "bool", -1, "detect obstacles at grid[t/f]", "", &cargo_ants_local_mapping_Config::detect_grid_obstacles)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.detect_scan_obstacles = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.detect_scan_obstacles = 1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.detect_scan_obstacles = 1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<bool>("detect_scan_obstacles", "bool", -1, "detect obstacles at scan [t/f]", "", &cargo_ants_local_mapping_Config::detect_scan_obstacles)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<bool>("detect_scan_obstacles", "bool", -1, "detect obstacles at scan [t/f]", "", &cargo_ants_local_mapping_Config::detect_scan_obstacles)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.detect_lines = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.detect_lines = 1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.detect_lines = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<bool>("detect_lines", "bool", -1, "detect lines [t/f]", "", &cargo_ants_local_mapping_Config::detect_lines)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<bool>("detect_lines", "bool", -1, "detect lines [t/f]", "", &cargo_ants_local_mapping_Config::detect_lines)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.detect_corners = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.detect_corners = 1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.detect_corners = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<bool>("detect_corners", "bool", -1, "detect corners [t/f]", "", &cargo_ants_local_mapping_Config::detect_corners)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<bool>("detect_corners", "bool", -1, "detect corners [t/f]", "", &cargo_ants_local_mapping_Config::detect_corners)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.detect_polylines = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.detect_polylines = 1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.detect_polylines = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<bool>("detect_polylines", "bool", -1, "detect polylines [t/f]", "", &cargo_ants_local_mapping_Config::detect_polylines)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<bool>("detect_polylines", "bool", -1, "detect polylines [t/f]", "", &cargo_ants_local_mapping_Config::detect_polylines)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.mapping_rate = 2.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.mapping_rate = 20.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.mapping_rate = 10.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<double>("mapping_rate", "double", -1, "mapping rate [hz]", "", &cargo_ants_local_mapping_Config::mapping_rate)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<double>("mapping_rate", "double", -1, "mapping rate [hz]", "", &cargo_ants_local_mapping_Config::mapping_rate)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.is_odom_relative = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.is_odom_relative = 1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.is_odom_relative = 1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<bool>("is_odom_relative", "bool", -1, "True: Rleative Odom. False: Twist Odom [t/f]", "", &cargo_ants_local_mapping_Config::is_odom_relative)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<bool>("is_odom_relative", "bool", -1, "True: Rleative Odom. False: Twist Odom [t/f]", "", &cargo_ants_local_mapping_Config::is_odom_relative)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.num_lasers = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.num_lasers = 10;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.num_lasers = 1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<int>("num_lasers", "int", -1, "number of laser devices [#]", "", &cargo_ants_local_mapping_Config::num_lasers)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<int>("num_lasers", "int", -1, "number of laser devices [#]", "", &cargo_ants_local_mapping_Config::num_lasers)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.num_radars = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.num_radars = 10;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.num_radars = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<int>("num_radars", "int", -1, "number of radar devices [#]", "", &cargo_ants_local_mapping_Config::num_radars)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<int>("num_radars", "int", -1, "number of radar devices [#]", "", &cargo_ants_local_mapping_Config::num_radars)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.base_link_name = "";
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.base_link_name = "";
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.base_link_name = "agv_base_link";
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<std::string>("base_link_name", "str", 0, "Name of the vehicle base link", "", &cargo_ants_local_mapping_Config::base_link_name)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<std::string>("base_link_name", "str", 0, "Name of the vehicle base link", "", &cargo_ants_local_mapping_Config::base_link_name)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.radar_idx_offset = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.radar_idx_offset = 10;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.radar_idx_offset = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<int>("radar_idx_offset", "int", -1, "Starting index to name radar frames [#]", "", &cargo_ants_local_mapping_Config::radar_idx_offset)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<int>("radar_idx_offset", "int", -1, "Starting index to name radar frames [#]", "", &cargo_ants_local_mapping_Config::radar_idx_offset)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.radar_link_name = "";
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.radar_link_name = "";
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.radar_link_name = "at_radar";
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<std::string>("radar_link_name", "str", 0, "Name of the radar device frames, without radar id", "", &cargo_ants_local_mapping_Config::radar_link_name)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<std::string>("radar_link_name", "str", 0, "Name of the radar device frames, without radar id", "", &cargo_ants_local_mapping_Config::radar_link_name)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.grid_size_x = 1.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.grid_size_x = 60.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.grid_size_x = 30.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<double>("grid_size_x", "double", -1, "grid size in x [m]", "", &cargo_ants_local_mapping_Config::grid_size_x)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<double>("grid_size_x", "double", -1, "grid size in x [m]", "", &cargo_ants_local_mapping_Config::grid_size_x)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.grid_size_y = 1.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.grid_size_y = 60.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.grid_size_y = 20.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<double>("grid_size_y", "double", -1, "grid size in y [m]", "", &cargo_ants_local_mapping_Config::grid_size_y)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<double>("grid_size_y", "double", -1, "grid size in y [m]", "", &cargo_ants_local_mapping_Config::grid_size_y)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.grid_cell_size = 0.1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.grid_cell_size = 1.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.grid_cell_size = 0.5;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<double>("grid_cell_size", "double", -1, "cell size [m]", "", &cargo_ants_local_mapping_Config::grid_cell_size)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<double>("grid_cell_size", "double", -1, "cell size [m]", "", &cargo_ants_local_mapping_Config::grid_cell_size)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.grid_x_max = 10.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.grid_x_max = 60.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.grid_x_max = 30.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<double>("grid_x_max", "double", -1, "grid top left corner, x coordinate [m]", "", &cargo_ants_local_mapping_Config::grid_x_max)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<double>("grid_x_max", "double", -1, "grid top left corner, x coordinate [m]", "", &cargo_ants_local_mapping_Config::grid_x_max)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.grid_y_max = 10.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.grid_y_max = 60.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.grid_y_max = 10.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<double>("grid_y_max", "double", -1, "grid top left corner, y coordinate [m]", "", &cargo_ants_local_mapping_Config::grid_y_max)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<double>("grid_y_max", "double", -1, "grid top left corner, y coordinate [m]", "", &cargo_ants_local_mapping_Config::grid_y_max)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.cell_occupancy_odom_th = 0.1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.cell_occupancy_odom_th = 0.5;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.cell_occupancy_odom_th = 0.1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<double>("cell_occupancy_odom_th", "double", -1, "threshold for occupied cell. Used in odom prediction", "", &cargo_ants_local_mapping_Config::cell_occupancy_odom_th)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<double>("cell_occupancy_odom_th", "double", -1, "threshold for occupied cell. Used in odom prediction", "", &cargo_ants_local_mapping_Config::cell_occupancy_odom_th)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.cell_occupancy_cluster_th = 0.1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.cell_occupancy_cluster_th = 0.5;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.cell_occupancy_cluster_th = 0.5;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<double>("cell_occupancy_cluster_th", "double", -1, "threshold for occupied cell. Used in clustering", "", &cargo_ants_local_mapping_Config::cell_occupancy_cluster_th)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<double>("cell_occupancy_cluster_th", "double", -1, "threshold for occupied cell. Used in clustering", "", &cargo_ants_local_mapping_Config::cell_occupancy_cluster_th)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.cell_occupancy_decay = 0.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.cell_occupancy_decay = 0.95;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.cell_occupancy_decay = 0.5;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<double>("cell_occupancy_decay", "double", -1, "multiplying factor for twist updated cells", "", &cargo_ants_local_mapping_Config::cell_occupancy_decay)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<double>("cell_occupancy_decay", "double", -1, "multiplying factor for twist updated cells", "", &cargo_ants_local_mapping_Config::cell_occupancy_decay)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.cell_lidar_hit = 0.1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.cell_lidar_hit = 0.9;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.cell_lidar_hit = 0.5;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<double>("cell_lidar_hit", "double", -1, "factor", "", &cargo_ants_local_mapping_Config::cell_lidar_hit)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr(new cargo_ants_local_mapping_Config::ParamDescription<double>("cell_lidar_hit", "double", -1, "factor", "", &cargo_ants_local_mapping_Config::cell_lidar_hit)));
//#line 235 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 235 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(cargo_ants_local_mapping_Config::AbstractGroupDescriptionConstPtr(new cargo_ants_local_mapping_Config::GroupDescription<cargo_ants_local_mapping_Config::DEFAULT, cargo_ants_local_mapping_Config>(Default)));
//#line 353 "/opt/ros/indigo/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<cargo_ants_local_mapping_Config::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__); 
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__); 
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__); 
    }
    std::vector<cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<cargo_ants_local_mapping_Config::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    cargo_ants_local_mapping_Config __max__;
    cargo_ants_local_mapping_Config __min__;
    cargo_ants_local_mapping_Config __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const cargo_ants_local_mapping_ConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static cargo_ants_local_mapping_ConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &cargo_ants_local_mapping_Config::__getDescriptionMessage__() 
  {
    return __get_statics__()->__description_message__;
  }

  inline const cargo_ants_local_mapping_Config &cargo_ants_local_mapping_Config::__getDefault__()
  {
    return __get_statics__()->__default__;
  }
  
  inline const cargo_ants_local_mapping_Config &cargo_ants_local_mapping_Config::__getMax__()
  {
    return __get_statics__()->__max__;
  }
  
  inline const cargo_ants_local_mapping_Config &cargo_ants_local_mapping_Config::__getMin__()
  {
    return __get_statics__()->__min__;
  }
  
  inline const std::vector<cargo_ants_local_mapping_Config::AbstractParamDescriptionConstPtr> &cargo_ants_local_mapping_Config::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<cargo_ants_local_mapping_Config::AbstractGroupDescriptionConstPtr> &cargo_ants_local_mapping_Config::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const cargo_ants_local_mapping_ConfigStatics *cargo_ants_local_mapping_Config::__get_statics__()
  {
    const static cargo_ants_local_mapping_ConfigStatics *statics;
  
    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = cargo_ants_local_mapping_ConfigStatics::get_instance();
    
    return statics;
  }


}

#endif // __CARGO_ANTS_LOCAL_MAPPING_RECONFIGURATOR_H__
