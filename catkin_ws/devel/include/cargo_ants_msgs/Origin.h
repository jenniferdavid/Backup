// Generated by gencpp from file cargo_ants_msgs/Origin.msg
// DO NOT EDIT!


#ifndef CARGO_ANTS_MSGS_MESSAGE_ORIGIN_H
#define CARGO_ANTS_MSGS_MESSAGE_ORIGIN_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace cargo_ants_msgs
{
template <class ContainerAllocator>
struct Origin_
{
  typedef Origin_<ContainerAllocator> Type;

  Origin_()
    : ox(0.0)
    , oy(0.0)
    , oth(0.0)  {
    }
  Origin_(const ContainerAllocator& _alloc)
    : ox(0.0)
    , oy(0.0)
    , oth(0.0)  {
  (void)_alloc;
    }



   typedef float _ox_type;
  _ox_type ox;

   typedef float _oy_type;
  _oy_type oy;

   typedef float _oth_type;
  _oth_type oth;




  typedef boost::shared_ptr< ::cargo_ants_msgs::Origin_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::cargo_ants_msgs::Origin_<ContainerAllocator> const> ConstPtr;

}; // struct Origin_

typedef ::cargo_ants_msgs::Origin_<std::allocator<void> > Origin;

typedef boost::shared_ptr< ::cargo_ants_msgs::Origin > OriginPtr;
typedef boost::shared_ptr< ::cargo_ants_msgs::Origin const> OriginConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::cargo_ants_msgs::Origin_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::cargo_ants_msgs::Origin_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace cargo_ants_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'sensor_msgs': ['/opt/ros/indigo/share/sensor_msgs/cmake/../msg'], 'cargo_ants_msgs': ['/home/jendav/catkin_ws/src/code/cargo-ants-ros-pkgs/cargo_ants_msgs/msg'], 'geometry_msgs': ['/opt/ros/indigo/share/geometry_msgs/cmake/../msg'], 'std_msgs': ['/opt/ros/indigo/share/std_msgs/cmake/../msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::cargo_ants_msgs::Origin_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::cargo_ants_msgs::Origin_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::cargo_ants_msgs::Origin_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::cargo_ants_msgs::Origin_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::cargo_ants_msgs::Origin_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::cargo_ants_msgs::Origin_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::cargo_ants_msgs::Origin_<ContainerAllocator> >
{
  static const char* value()
  {
    return "a100ff13ed4649c823796e4aea68b299";
  }

  static const char* value(const ::cargo_ants_msgs::Origin_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xa100ff13ed4649c8ULL;
  static const uint64_t static_value2 = 0x23796e4aea68b299ULL;
};

template<class ContainerAllocator>
struct DataType< ::cargo_ants_msgs::Origin_<ContainerAllocator> >
{
  static const char* value()
  {
    return "cargo_ants_msgs/Origin";
  }

  static const char* value(const ::cargo_ants_msgs::Origin_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::cargo_ants_msgs::Origin_<ContainerAllocator> >
{
  static const char* value()
  {
    return "float32 ox\n\
float32 oy\n\
float32 oth\n\
";
  }

  static const char* value(const ::cargo_ants_msgs::Origin_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::cargo_ants_msgs::Origin_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.ox);
      stream.next(m.oy);
      stream.next(m.oth);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct Origin_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::cargo_ants_msgs::Origin_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::cargo_ants_msgs::Origin_<ContainerAllocator>& v)
  {
    s << indent << "ox: ";
    Printer<float>::stream(s, indent + "  ", v.ox);
    s << indent << "oy: ";
    Printer<float>::stream(s, indent + "  ", v.oy);
    s << indent << "oth: ";
    Printer<float>::stream(s, indent + "  ", v.oth);
  }
};

} // namespace message_operations
} // namespace ros

#endif // CARGO_ANTS_MSGS_MESSAGE_ORIGIN_H
