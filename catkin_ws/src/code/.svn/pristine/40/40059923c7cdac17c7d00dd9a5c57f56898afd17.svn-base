<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>E* v2: estar.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">E* v2
   &#160;<span id="projectnumber">2014-08-21</span>
   </div>
   <div id="projectbrief">Minimalist Interpolated Graph Replanner</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Macros</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.html">include</a></li><li class="navelem"><a class="el" href="dir_4a34c63cf5350a5d9da76fa19882274e.html">estar2</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">estar.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="grid_8h_source.html">estar2/grid.h</a>&gt;</code><br/>
<code>#include &lt;<a class="el" href="pqueue_8h_source.html">estar2/pqueue.h</a>&gt;</code><br/>
</div>
<p><a href="estar_8h_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:structestar__t"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="estar_8h.html#structestar__t">estar_t</a></td></tr>
<tr class="separator:structestar__t"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:aefb33894afdfd4720a0039f682152501"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="estar_8h.html#aefb33894afdfd4720a0039f682152501">estar_init</a> (<a class="el" href="estar_8h.html#structestar__t">estar_t</a> *<a class="el" href="gestar2_8c.html#a726bb5bd8e4886f7549809514c413446">estar</a>, size_t dimx, size_t dimy)</td></tr>
<tr class="separator:aefb33894afdfd4720a0039f682152501"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac2dd936e32be6fac42520f67632f82a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="estar_8h.html#aac2dd936e32be6fac42520f67632f82a">estar_reset</a> (<a class="el" href="estar_8h.html#structestar__t">estar_t</a> *<a class="el" href="gestar2_8c.html#a726bb5bd8e4886f7549809514c413446">estar</a>)</td></tr>
<tr class="separator:aac2dd936e32be6fac42520f67632f82a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d520b77098b1899c89f7ddc5f05d48e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="estar_8h.html#a4d520b77098b1899c89f7ddc5f05d48e">estar_fini</a> (<a class="el" href="estar_8h.html#structestar__t">estar_t</a> *<a class="el" href="gestar2_8c.html#a726bb5bd8e4886f7549809514c413446">estar</a>)</td></tr>
<tr class="separator:a4d520b77098b1899c89f7ddc5f05d48e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a102049968b6d106deda1bf8d28a73207"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="estar_8h.html#a102049968b6d106deda1bf8d28a73207">estar_set_goal</a> (<a class="el" href="estar_8h.html#structestar__t">estar_t</a> *<a class="el" href="gestar2_8c.html#a726bb5bd8e4886f7549809514c413446">estar</a>, size_t ix, size_t iy)</td></tr>
<tr class="separator:a102049968b6d106deda1bf8d28a73207"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae15ae56d37fd4e530907c61bb81eb9a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="estar_8h.html#aae15ae56d37fd4e530907c61bb81eb9a">estar_set_speed</a> (<a class="el" href="estar_8h.html#structestar__t">estar_t</a> *<a class="el" href="gestar2_8c.html#a726bb5bd8e4886f7549809514c413446">estar</a>, size_t ix, size_t iy, double speed)</td></tr>
<tr class="separator:aae15ae56d37fd4e530907c61bb81eb9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3330f9d3783bb79dd42afc538dcf12de"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="estar_8h.html#a3330f9d3783bb79dd42afc538dcf12de">estar_update</a> (<a class="el" href="estar_8h.html#structestar__t">estar_t</a> *<a class="el" href="gestar2_8c.html#a726bb5bd8e4886f7549809514c413446">estar</a>, <a class="el" href="cell_8h.html#structestar__cell__t">estar_cell_t</a> *cell)</td></tr>
<tr class="separator:a3330f9d3783bb79dd42afc538dcf12de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdd6c06e211fd65a980a79c9f652f664"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="estar_8h.html#afdd6c06e211fd65a980a79c9f652f664">estar_propagate</a> (<a class="el" href="estar_8h.html#structestar__t">estar_t</a> *<a class="el" href="gestar2_8c.html#a726bb5bd8e4886f7549809514c413446">estar</a>)</td></tr>
<tr class="separator:afdd6c06e211fd65a980a79c9f652f664"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab51ca1e9d0f2dade9bc6876fe98ea659"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="estar_8h.html#ab51ca1e9d0f2dade9bc6876fe98ea659">estar_dump_queue</a> (<a class="el" href="estar_8h.html#structestar__t">estar_t</a> *<a class="el" href="gestar2_8c.html#a726bb5bd8e4886f7549809514c413446">estar</a>, char const *pfx)</td></tr>
<tr class="separator:ab51ca1e9d0f2dade9bc6876fe98ea659"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6ce2ab5a1becea4b7a476d138019a54"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="estar_8h.html#af6ce2ab5a1becea4b7a476d138019a54">estar_check</a> (<a class="el" href="estar_8h.html#structestar__t">estar_t</a> *<a class="el" href="gestar2_8c.html#a726bb5bd8e4886f7549809514c413446">estar</a>, char const *pfx)</td></tr>
<tr class="separator:af6ce2ab5a1becea4b7a476d138019a54"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<hr/><h2 class="groupheader">Data Structure Documentation</h2>
<a name="structestar__t" id="structestar__t"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct estar_t</td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="textblock"><p>E* computes the crossing-time values (called "phi" as this is commonly used in the literature about Level-Set and Fast-Marching Methods) at the center points of regular cells that are arranged in a grid. Each cell has a "speed" which lies between 0 and 1, and which encodes the velocity with which a simulated wavefront should traverse that cell. Thus, a 0 corresponds to obstacles (nothing can get through) and a 1 corresponds to free space (you can go at full speed). Anything in between can be used to model areas that should be avoided but can be traversed if necessary, or to implement soft buffer zones around obstacles.</p>
<p>E* maintains a priority queue of cells that need to get updated in order to propagate all information. When you add goals (i.e. flag cells as being goals and setting their value to zero) or when you modify a cell's speed information, things get added to the queue. When a cell gets updated (during propagation) and its value changes, then its neighbors might be added to the queue (i.e. if they previously depended on the updated cell, or if the cell's new value presents an opportunity to lower the neighbor's value).</p>
<p>You can keep an <a class="el" href="estar_8h.html#structestar__t">estar_t</a> as an instance (e.g. statically or on the stack), or dynamically allocate it. In either case, you have to call <a class="el" href="estar_8h.html#aefb33894afdfd4720a0039f682152501">estar_init()</a> before you can use it, and should call <a class="el" href="estar_8h.html#a4d520b77098b1899c89f7ddc5f05d48e">estar_fini()</a> when you are done with it (so that internally allocated memory can be freed). </p>

<p>Definition at line <a class="el" href="estar_8h_source.html#l00145">145</a> of file <a class="el" href="estar_8h_source.html">estar.h</a>.</p>
</div><table class="fieldtable">
<tr><th colspan="3">Data Fields</th></tr>
<tr><td class="fieldtype">
<a class="anchor" id="ac800eac5773186c329d65ce3137d3caf"></a><a class="el" href="grid_8h.html#structestar__grid__t">estar_grid_t</a></td>
<td class="fieldname">
grid</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="ad4f26a0293eca37fbe8f948848e59627"></a><a class="el" href="pqueue_8h.html#structestar__pqueue__t">estar_pqueue_t</a></td>
<td class="fieldname">
pq</td>
<td class="fielddoc">
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="aefb33894afdfd4720a0039f682152501"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void estar_init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="estar_8h.html#structestar__t">estar_t</a> *&#160;</td>
          <td class="paramname"><em>estar</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>dimx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>dimy</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Initializes the given <a class="el" href="estar_8h.html#structestar__t">estar_t</a> instance to represent a grid with the given dimensions. In case you are reusing a previously initialized <a class="el" href="estar_8h.html#structestar__t">estar_t</a> instance, you should first call <a class="el" href="estar_8h.html#a4d520b77098b1899c89f7ddc5f05d48e">estar_fini()</a> on it. </p>

<p>Definition at line <a class="el" href="estar_8c_source.html#l00122">122</a> of file <a class="el" href="estar_8c_source.html">estar.c</a>.</p>

</div>
</div>
<a class="anchor" id="aac2dd936e32be6fac42520f67632f82a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void estar_reset </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="estar_8h.html#structestar__t">estar_t</a> *&#160;</td>
          <td class="paramname"><em>estar</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Clears everything except speed information. You need to <a class="el" href="estar_8h.html#a102049968b6d106deda1bf8d28a73207">estar_set_goal()</a> again after calling this function. </p>

<p>Definition at line <a class="el" href="estar_8c_source.html#l00129">129</a> of file <a class="el" href="estar_8c_source.html">estar.c</a>.</p>

</div>
</div>
<a class="anchor" id="a4d520b77098b1899c89f7ddc5f05d48e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void estar_fini </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="estar_8h.html#structestar__t">estar_t</a> *&#160;</td>
          <td class="paramname"><em>estar</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Frees up the memory allocated during <a class="el" href="estar_8h.html#aefb33894afdfd4720a0039f682152501">estar_init()</a>. </p>

<p>Definition at line <a class="el" href="estar_8c_source.html#l00147">147</a> of file <a class="el" href="estar_8c_source.html">estar.c</a>.</p>

</div>
</div>
<a class="anchor" id="a102049968b6d106deda1bf8d28a73207"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void estar_set_goal </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="estar_8h.html#structestar__t">estar_t</a> *&#160;</td>
          <td class="paramname"><em>estar</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>ix</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>iy</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Designates the given cell (specified by its indices) as being a goal cell. At least one cell must be a goal, but there is no upper limit. Indeed, it is a common usecase to have one E* instance where all the obstacle cells are goals, then E* serves as a distance transform (each cell will end up with a phi value equal to the Euclidean distance to the closest obstacle). </p>

<p>Definition at line <a class="el" href="estar_8c_source.html#l00154">154</a> of file <a class="el" href="estar_8c_source.html">estar.c</a>.</p>

</div>
</div>
<a class="anchor" id="aae15ae56d37fd4e530907c61bb81eb9a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void estar_set_speed </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="estar_8h.html#structestar__t">estar_t</a> *&#160;</td>
          <td class="paramname"><em>estar</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>ix</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>iy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>speed</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set the wavefront propagation speed for the given cell. A speed of 0 (zero) means that this cell is an obstacle, and a speed of 1 (one) means it lies in freespace. Nothing prevents you from setting speeds higher than 1 (or indeed lower than 0), but the algorithm is not really designed to handle this properly. So, just don't do it. </p>

<p>Definition at line <a class="el" href="estar_8c_source.html#l00164">164</a> of file <a class="el" href="estar_8c_source.html">estar.c</a>.</p>

</div>
</div>
<a class="anchor" id="a3330f9d3783bb79dd42afc538dcf12de"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void estar_update </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="estar_8h.html#structestar__t">estar_t</a> *&#160;</td>
          <td class="paramname"><em>estar</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="cell_8h.html#structestar__cell__t">estar_cell_t</a> *&#160;</td>
          <td class="paramname"><em>cell</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Internal function: update a single cell. There is probably no good reason to have this exposed in the interface, except that it can help with experimentation and debugging. </p>

<p>Definition at line <a class="el" href="estar_8c_source.html#l00208">208</a> of file <a class="el" href="estar_8c_source.html">estar.c</a>.</p>

</div>
</div>
<a class="anchor" id="afdd6c06e211fd65a980a79c9f652f664"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void estar_propagate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="estar_8h.html#structestar__t">estar_t</a> *&#160;</td>
          <td class="paramname"><em>estar</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Perform one wavefront propagation step. Repeatedly call this function in order to run E*. It takes the topmost cell from the priority queue, raises or lowers its phi value depending on why it had ended up on the queue in the first place, and then potentially schedules its neighbors for an update. </p>

<p>Definition at line <a class="el" href="estar_8c_source.html#l00233">233</a> of file <a class="el" href="estar_8c_source.html">estar.c</a>.</p>

</div>
</div>
<a class="anchor" id="ab51ca1e9d0f2dade9bc6876fe98ea659"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void estar_dump_queue </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="estar_8h.html#structestar__t">estar_t</a> *&#160;</td>
          <td class="paramname"><em>estar</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char const *&#160;</td>
          <td class="paramname"><em>pfx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>A debugging function to print the priority queue of cells that are pending updates to stdout. </p>

<p>Definition at line <a class="el" href="estar_8c_source.html#l00327">327</a> of file <a class="el" href="estar_8c_source.html">estar.c</a>.</p>

</div>
</div>
<a class="anchor" id="af6ce2ab5a1becea4b7a476d138019a54"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int estar_check </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="estar_8h.html#structestar__t">estar_t</a> *&#160;</td>
          <td class="paramname"><em>estar</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char const *&#160;</td>
          <td class="paramname"><em>pfx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>A debugging function which performs internal consistency checks. It returns 0 when everything is honky dory, and a bitmask otherwise. It also writes human-readbable error messages to stdout, so you need not neccessarily worry about the meanings in the bitmask. </p>

<p>Definition at line <a class="el" href="estar_8c_source.html#l00262">262</a> of file <a class="el" href="estar_8c_source.html">estar.c</a>.</p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Jul 30 2015 17:16:42 for E* v2 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.6
</small></address>
</body>
</html>
